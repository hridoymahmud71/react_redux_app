{"ast":null,"code":"import _defineProperty from \"H:\\\\Hridoy\\\\react_redux_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as ACTION_TYPE from '../actions/action_types';\nconst initialState = {\n  prop_one: false\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPE.SUCCESS:\n      return _objectSpread({}, state, {\n        prop_one: true\n      });\n\n    case ACTION_TYPE.FAILURE:\n      return _objectSpread({}, state, {\n        prop_one: false\n      });\n\n    default:\n      return {\n        state\n      };\n  }\n};","map":{"version":3,"sources":["H:/Hridoy/react_redux_app/src/store/reducers/reducer_one.js"],"names":["ACTION_TYPE","initialState","prop_one","rootReducer","state","action","type","SUCCESS","FAILURE"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,yBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAElD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKN,WAAW,CAACO,OAAjB;AACI,+BACOH,KADP;AAEIF,QAAAA,QAAQ,EAAE;AAFd;;AAIJ,SAAKF,WAAW,CAACQ,OAAjB;AACI,+BACOJ,KADP;AAEIF,QAAAA,QAAQ,EAAE;AAFd;;AAIJ;AACI,aAAO;AACHE,QAAAA;AADG,OAAP;AAbR;AAmBH,CArBD","sourcesContent":["import * as ACTION_TYPE from '../actions/action_types'\r\n\r\nconst initialState = {\r\n    prop_one: false\r\n}\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ACTION_TYPE.SUCCESS:\r\n            return {\r\n                ...state,\r\n                prop_one: true\r\n            }\r\n        case ACTION_TYPE.FAILURE:\r\n            return {\r\n                ...state,\r\n                prop_one: false\r\n            }\r\n        default:\r\n            return {\r\n                state\r\n            }\r\n\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}